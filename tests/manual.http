@hostname = localhost
@port = 8000
@url = {{hostname}}:{{port}}

### Create user
# @name create
POST http://{{url}}/users HTTP/1.1
content-type: application/json

# use your real email to test for welcome mail sending
{
    "name": "Micky Mouse",
	"email": "holiday@gmail.com",
	"password": "rainbow543",
	"age": 20
}

### Login
# @name login
POST http://{{url}}/users/login HTTP/1.1
content-type: application/json

{
	"email": "holiday@gmail.com",
	"password": "rainbow543"
}

### Logout user
@authToken = {{login.response.body.$.token}}
POST http://{{url}}/users/logout HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}

### Logout user from all sessions
@token = {{create.response.body.$.token}}
POST http://{{url}}/users/logoutAll HTTP/1.1
content-type: application/json
authorization: Bearer {{token}}

### Get user profile information
GET http://{{url}}/users/me HTTP/1.1
authorization: Bearer {{authToken}}

### Update user information
PATCH http://{{url}}/users/me HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}

{
	"age": 55,
	"name": "Wise Owl"
}

### Upload profile picture
POST http://{{url}}/users/me/avatar HTTP/1.1
content-type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
authorization: Bearer {{authToken}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition:: form-data, name="avatar", filename="profile-pic.jpg"
Content-Type: image/jpg

< ./profile-pic.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Delete profile picture
DELETE http://{{url}}/users/me/avatar HTTP/1.1
authorization: Bearer {{authToken}}

### Delete user
DELETE http://{{url}}/users/me HTTP/1.1
authorization: Bearer {{authToken}}

### Create task
POST http://{{url}}/tasks HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}

# use your real email to test for welcome mail sending
{
    "description": "write project proposal"
}

### Get the user's tasks
GET http://{{url}}/tasks?completed=false HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}

### Get task by id
GET http://{{url}}/tasks/64ee71eb6cdf76107ac1a8e7 HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}

### Update task by id
PATCH http://{{url}}/tasks/64ee71eb6cdf76107ac1a8e7 HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}

{
	"completed": true
}

### Delete task by id
DELETE http://{{url}}/tasks/64ee7c7e6cdf76107ac1a8ed HTTP/1.1
content-type: application/json
authorization: Bearer {{authToken}}